(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{358:function(t,v,_){"use strict";_.r(v);var e=_(33),a=Object(e.a)({},(function(){var t=this,v=t.$createElement,_=t._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h1",{attrs:{id:"事件"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#事件"}},[t._v("#")]),t._v(" 事件")]),t._v(" "),_("h2",{attrs:{id:"_1-鼠标事件-mouse-event"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1-鼠标事件-mouse-event"}},[t._v("#")]),t._v(" 1. 鼠标事件(Mouse Event)")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[t._v("Type")]),_("th",[t._v("Event")]),_("th",[t._v("Count")]),_("th",[t._v("Timing")])])]),t._v(" "),_("tbody",[_("tr",[_("td",{attrs:{rowspan:"3"}},[t._v("鼠标运动类")]),t._v(" "),_("td",[t._v("mouseover / mouseenter")]),t._v(" "),_("td",[t._v("1")]),t._v(" "),_("td",[t._v("鼠标指针移入时触发(冒泡/不冒泡)")])]),t._v(" "),_("tr",[_("td",[t._v("mousemove")]),t._v(" "),_("td",[t._v("n")]),t._v(" "),_("td",[t._v("鼠标指针移动时触发")])]),t._v(" "),_("tr",[_("td",[t._v("mouseout / mouseleave")]),t._v(" "),_("td",[t._v("1")]),t._v(" "),_("td",[t._v("鼠标指针移开时触发(冒泡/不冒泡)")])]),t._v(" "),_("tr",[_("td",{attrs:{rowspan:"5"}},[t._v("鼠标点击类")]),t._v(" "),_("td",[t._v("mousedown")]),t._v(" "),_("td",[t._v("1")]),t._v(" "),_("td",[t._v("左/右键点击时触发")])]),t._v(" "),_("tr",[_("td",[t._v("mouseup")]),t._v(" "),_("td",[t._v("1")]),t._v(" "),_("td",[t._v("左/右键弹起时触发")])]),t._v(" "),_("tr",[_("td",[t._v("click\t/ contextmenu")]),t._v(" "),_("td",[t._v("1")]),t._v(" "),_("td",[t._v("左/右键点击并弹起时触发")])]),t._v(" "),_("tr",[_("td",[t._v("dblclick")]),t._v(" "),_("td",[t._v("1")]),t._v(" "),_("td",[t._v("左键双击并弹起时触发")])]),t._v(" "),_("tr",[_("td",[t._v("selectstart")]),t._v(" "),_("td",[t._v("1")]),t._v(" "),_("td",[t._v("左键点击时触发(区别于select)")])])])]),t._v(" "),_("h2",{attrs:{id:"_2-键盘事件-keyboard-event"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_2-键盘事件-keyboard-event"}},[t._v("#")]),t._v(" 2. 键盘事件(Keyboard Event)")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[t._v("Type")]),_("th",[t._v("Event")]),_("th",[t._v("Count")]),_("th",[t._v("Timing")])])]),t._v(" "),_("tbody",[_("tr",[_("td",{attrs:{rowspan:"3"}},[t._v("按键按下类")]),t._v(" "),_("td",[t._v("keydown")]),t._v(" "),_("td",[t._v("1")]),t._v(" "),_("td",[t._v("键盘按键按下时触发(不区分大小写)")])]),t._v(" "),_("tr",[_("td",[t._v("keypress")]),t._v(" "),_("td",[t._v("1")]),t._v(" "),_("td",[t._v("键盘按键按下并弹起时触发(不识别功能键)")])]),t._v(" "),_("tr",[_("td",[t._v("keyup")]),t._v(" "),_("td",[t._v("1")]),t._v(" "),_("td",[t._v("键盘按键弹起时触发(不区分大小写)")])])])]),t._v(" "),_("h2",{attrs:{id:"_3-框架-对象事件-frame-object-event"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_3-框架-对象事件-frame-object-event"}},[t._v("#")]),t._v(" 3. 框架/对象事件(Frame/Object Event)")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[t._v("Type")]),_("th",[t._v("Event")]),_("th",[t._v("Count")]),_("th",[t._v("Timing")])])]),t._v(" "),_("tbody",[_("tr",[_("td",{attrs:{rowspan:"3"}},[t._v("加载类")]),t._v(" "),_("td",[t._v("load / pageshow")]),t._v(" "),_("td",[t._v("1")]),t._v(" "),_("td",[t._v("页面加载完毕时触发/用户访问页面时触发")])]),t._v(" "),_("tr",[_("td",[t._v("unload / pagehide")]),t._v(" "),_("td",[t._v("1")]),t._v(" "),_("td",[t._v("用户离开页面时触发")])]),t._v(" "),_("tr",[_("td",[t._v("DOMContentLoaded")]),t._v(" "),_("td",[t._v("1")]),t._v(" "),_("td",[t._v("页面DOM元素加载完毕时触发")])]),t._v(" "),_("tr",[_("td",{attrs:{rowspan:"2"}},[t._v("其他类")]),t._v(" "),_("td",[t._v("resize")]),t._v(" "),_("td",[t._v("n")]),t._v(" "),_("td",[t._v("窗口大小改变时触发")])]),t._v(" "),_("tr",[_("td",[t._v("scroll")]),t._v(" "),_("td",[t._v("n")]),t._v(" "),_("td",[t._v("滚动条滚动时触发")])])])]),t._v(" "),_("h2",{attrs:{id:"_4-表单事件-form-event"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_4-表单事件-form-event"}},[t._v("#")]),t._v(" 4. 表单事件(Form Event)")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[t._v("Type")]),_("th",[t._v("Event")]),_("th",[t._v("Count")]),_("th",[t._v("Timing")])])]),t._v(" "),_("tbody",[_("tr",[_("td",{attrs:{rowspan:"5"}},[t._v("其他类")]),t._v(" "),_("td",[t._v("focus / blur")]),t._v(" "),_("td",[t._v("1")]),t._v(" "),_("td",[t._v("表单获得/失去焦点时触发")])]),t._v(" "),_("tr",[_("td",[t._v("change")]),t._v(" "),_("td",[t._v("1")]),t._v(" "),_("td",[t._v("表单内容改变时触发")])]),t._v(" "),_("tr",[_("td",[t._v("select")]),t._v(" "),_("td",[t._v("1")]),t._v(" "),_("td",[t._v("表单内容被选中时触发(区别于selectstart)")])]),t._v(" "),_("tr",[_("td",[t._v("input")]),t._v(" "),_("td",[t._v("n")]),t._v(" "),_("td",[t._v("表单输入内容时触发")])]),t._v(" "),_("tr",[_("td",[t._v("submit")]),t._v(" "),_("td",[t._v("1")]),t._v(" "),_("td",[t._v("表单提交时触发")])])])]),t._v(" "),_("h2",{attrs:{id:"_5-过渡事件-transition-event"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_5-过渡事件-transition-event"}},[t._v("#")]),t._v(" 5. 过渡事件(Transition Event)")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[t._v("Type")]),_("th",[t._v("Event")]),_("th",[t._v("Count")]),_("th",[t._v("Timing")])])]),t._v(" "),_("tbody",[_("tr",[_("td",[t._v("其他类")]),t._v(" "),_("td",[t._v("transitionend")]),t._v(" "),_("td",[t._v("1")]),t._v(" "),_("td",[t._v("过渡完成时触发")])])])]),t._v(" "),_("h2",{attrs:{id:"_6-触摸事件-touch-event"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_6-触摸事件-touch-event"}},[t._v("#")]),t._v(" 6. 触摸事件(Touch Event)")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[t._v("Type")]),_("th",[t._v("Event")]),_("th",[t._v("Count")]),_("th",[t._v("Timing")])])]),t._v(" "),_("tbody",[_("tr",[_("td",{attrs:{rowspan:"3"}},[t._v("手指接触类")]),t._v(" "),_("td",[t._v("touchstart")]),t._v(" "),_("td",[t._v("1")]),t._v(" "),_("td",[t._v("手指触摸时触发")])]),t._v(" "),_("tr",[_("td",[t._v("touchmove")]),t._v(" "),_("td",[t._v("n")]),t._v(" "),_("td",[t._v("手指触摸并移动时触发")])]),t._v(" "),_("tr",[_("td",[t._v("touchend")]),t._v(" "),_("td",[t._v("1")]),t._v(" "),_("td",[t._v("手指离开时触发")])])])]),t._v(" "),_("h1",{attrs:{id:"事件循环"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#事件循环"}},[t._v("#")]),t._v(" 事件循环")]),t._v(" "),_("h2",{attrs:{id:"_1-定义"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1-定义"}},[t._v("#")]),t._v(" 1. 定义")]),t._v(" "),_("blockquote",[_("p",[t._v("Event Loop是一个执行模型")])]),t._v(" "),_("h3",{attrs:{id:"_1-1-执行-调用栈"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-执行-调用栈"}},[t._v("#")]),t._v(" 1.1 执行/调用栈")]),t._v(" "),_("blockquote",[_("p",[t._v("CallStack 一个执行函数的栈结构, 遵循先进后出的原则")])]),t._v(" "),_("h3",{attrs:{id:"_1-2-宏任务"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-宏任务"}},[t._v("#")]),t._v(" 1.2 宏任务")]),t._v(" "),_("blockquote",[_("p",[t._v("Macrotask => tasks => macrotask Queue\n包括: setTimeout, setInterval, setImmediate (Node 独有), requestAnimationFrame (浏览器独有), UI rending (浏览器独有), I/O, DOM 事件, Ajax")])]),t._v(" "),_("h3",{attrs:{id:"_1-3-微任务"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-微任务"}},[t._v("#")]),t._v(" 1.3 微任务")]),t._v(" "),_("blockquote",[_("p",[t._v("Microtask => jobs => microtask Queue\n包括: Promise, MutationObserver, process.nextTick (Node 独有)")])]),t._v(" "),_("h2",{attrs:{id:"_2-浏览器的-event-loop"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_2-浏览器的-event-loop"}},[t._v("#")]),t._v(" 2. 浏览器的 Event Loop")]),t._v(" "),_("blockquote",[_("p",[t._v("浏览器的 Event Loop 是 HTML5 规范明确定义的")])]),t._v(" "),_("ul",[_("li",[t._v("具体步骤")])]),t._v(" "),_("blockquote",[_("ol",[_("li",[t._v("执行全局 Script 同步代码, 这些同步代码有一些是同步语句, 有一些是异步语句")]),t._v(" "),_("li",[t._v("此时, CallStack 会清空")]),t._v(" "),_("li",[t._v("依次从 microtask queue 的队首取出回调任务, 放入 CallStack 中执行, 直到把 microtask queue 中的所有任务都执行完毕")]),t._v(" "),_("li",[t._v("如果在执行 microtask 的过程中, 又产生了 microtask, 那么会加入到队列的末尾, 也会在同一个周期被调用执行")]),t._v(" "),_("li",[t._v("此时 CallStack 和 microtask queue 均为空\n5.5 (此时, 若有 UI rending 则会先执行)")]),t._v(" "),_("li",[t._v("取出 macrotask queue 中位于队首的任务, 放入 CallStack 中执行")]),t._v(" "),_("li",[t._v("此时, CallStack 会清空")]),t._v(" "),_("li",[t._v("重复 3 ~ 7, 直到 CallStack, microtask queue 和 macrotask queue 均为空")])])]),t._v(" "),_("h2",{attrs:{id:"_3-nodejs-的-event-loop"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_3-nodejs-的-event-loop"}},[t._v("#")]),t._v(" 3. NodeJS 的 Event Loop")]),t._v(" "),_("blockquote",[_("p",[t._v("NodeJS 的 Event Loop 是基于 libuv 实现的")])]),t._v(" "),_("ul",[_("li",[t._v("NodeJS 中的 macrotask queue")])]),t._v(" "),_("blockquote",[_("p",[t._v("按照执行顺序:")]),t._v(" "),_("ol",[_("li",[t._v("Timers Queue")]),t._v(" "),_("li",[t._v("I/O Callbacks Queue")]),t._v(" "),_("li",[t._v("Check Queue")]),t._v(" "),_("li",[t._v("Close Callbacks Queue")])])]),t._v(" "),_("ul",[_("li",[t._v("NodeJS 中的 microtask queue")])]),t._v(" "),_("blockquote",[_("p",[t._v("按照执行顺序:")]),t._v(" "),_("ol",[_("li",[t._v("Next Tick Queue")]),t._v(" "),_("li",[t._v("Other Microtask Queue")])])]),t._v(" "),_("ul",[_("li",[t._v("具体步骤")])]),t._v(" "),_("blockquote",[_("ol",[_("li",[t._v("执行全局 Script 的同步代码")]),t._v(" "),_("li",[t._v("执行 microtask queue, 先执行所有 Next Tick Queue 中的所有任务, 再执行 Other Microtask Queue 中的所有任务")]),t._v(" "),_("li",[t._v("执行 macrotask queue 第一阶段 timers 阶段, 执行 Timers Queue 全部任务: setTimeout, setInterval 预定的 callback")]),t._v(" "),_("li",[t._v("执行步骤 2")]),t._v(" "),_("li",[t._v("执行 macrotask queue 第二阶段 I/O callbacks 阶段, 执行 I/O Callbacks Queue 全部任务: 除 close 事件外的所有 callback")]),t._v(" "),_("li",[t._v("执行步骤 2")]),t._v(" "),_("li",[t._v("执行 macrotask queue 第三阶段 idle, prepare 阶段, 仅 node 内部使用")]),t._v(" "),_("li",[t._v("执行步骤 2")]),t._v(" "),_("li",[t._v("执行 macrotask queue 第四阶段 poll 阶段, 获取新的 I/O 事件")]),t._v(" "),_("li",[t._v("执行步骤 2")]),t._v(" "),_("li",[t._v("执行 macrotask queue 第五阶段 check 阶段, 执行 Check Queue 全部任务: setImmediate 预定的 callback")]),t._v(" "),_("li",[t._v("执行步骤 2")]),t._v(" "),_("li",[t._v("执行 macrotask queue 第六阶段 close callbacks 阶段, 执行 Close Callbacks Queue 全部任务: close 事件的 callback")]),t._v(" "),_("li",[t._v("执行步骤 2")]),t._v(" "),_("li",[t._v("重复 3 ~ 14, 直到 CallStack, microtask queue 和 macrotask queue 均为空")])])])])}),[],!1,null,null,null);v.default=a.exports}}]);